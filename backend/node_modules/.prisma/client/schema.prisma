generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/**
 * ---------- Core models ----------
 */

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  passwordHash String
  createdAt    DateTime @default(now())

  // 1:1 with Dream (FK lives on Dream)
  dream Dream? @relation("UserToDream")

  // 1:N memberships
  memberships UserRipple[] @relation("UserToMemberships")
}

model Dream {
  id        String   @id @default(cuid())
  userId    String   @unique
  waveId    String
  title     String
  createdAt DateTime @default(now())

  // explicit relation names avoid ambiguity
  user User @relation("UserToDream", fields: [userId], references: [id])
  wave Wave @relation("WaveToDreams", fields: [waveId], references: [id])

  @@index([waveId])
}

model Wave {
  id             String  @id @default(cuid())
  name           String  @unique
  description    String
  icon           String?
  impactCoef     Float
  impactUnit     String
  impactSource   String
  allowedBuckets String // comma-separated list

  ripples Ripple[] @relation("WaveToRipples")
  dreams  Dream[]  @relation("WaveToDreams")
}

model UserRipple {
  id        String   @id @default(cuid())
  userId    String
  rippleId  String
  isActive  Boolean  @default(true)
  isPrimary Boolean  @default(false)
  joinedAt  DateTime @default(now())

  // name the relations explicitly
  user   User   @relation("UserToMemberships", fields: [userId], references: [id])
  ripple Ripple @relation("RippleToMemberships", fields: [rippleId], references: [id])

  @@unique([userId, rippleId])
  @@index([userId, isPrimary])
}

model Ripple {
  id          String  @id @default(cuid())
  waveId      String
  title       String
  description String?
  createdBy   String  @default("system")
  status      String  @default("active")
  isStarter   Boolean @default(false)

  // Context for Stories
  audience_noun  String?
  context_label  String?
  blurb_template String?
  default_bucket String?

  wave Wave @relation("WaveToRipples", fields: [waveId], references: [id])

  // back-relations (help Prisma disambiguate)
  microActions MicroAction[]
  memberships  UserRipple[]  @relation("RippleToMemberships")

  @@index([waveId])
}

model MicroAction {
  id        String @id @default(cuid())
  rippleId  String
  text      String
  bucket    String
  status    String @default("active")
  createdBy String @default("system")

  ripple Ripple @relation(fields: [rippleId], references: [id])

  @@index([rippleId])
}
