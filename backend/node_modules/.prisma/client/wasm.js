
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.14.0
 * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
 */
Prisma.prismaVersion = {
  client: "6.14.0",
  engine: "717184b7b35ea05dfa71a3236b7af656013e1e49"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.WaveBucketScalarFieldEnum = {
  waveId: 'waveId',
  name: 'name',
  weight: 'weight'
};

exports.Prisma.TemplateScalarFieldEnum = {
  id: 'id',
  waveId: 'waveId',
  bucket: 'bucket',
  textPattern: 'textPattern',
  modifiersJson: 'modifiersJson',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  username: 'username',
  passwordHash: 'passwordHash',
  createdAt: 'createdAt',
  dream: 'dream'
};

exports.Prisma.WaveScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  icon: 'icon',
  color: 'color',
  impactCoef: 'impactCoef',
  impactUnit: 'impactUnit',
  impactSource: 'impactSource',
  impactVersion: 'impactVersion',
  allowedBuckets: 'allowedBuckets'
};

exports.Prisma.UserRippleScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  rippleId: 'rippleId',
  isActive: 'isActive',
  isPrimary: 'isPrimary',
  joinedAt: 'joinedAt'
};

exports.Prisma.RippleActivityScalarFieldEnum = {
  id: 'id',
  rippleId: 'rippleId',
  city: 'city',
  blurb: 'blurb',
  createdAt: 'createdAt'
};

exports.Prisma.RippleSummaryScalarFieldEnum = {
  rippleId: 'rippleId',
  participants: 'participants',
  actionsTotal: 'actionsTotal',
  impactValue: 'impactValue',
  impact30d: 'impact30d',
  impactUnit: 'impactUnit',
  impactSource: 'impactSource',
  updatedAt: 'updatedAt'
};

exports.Prisma.RippleScalarFieldEnum = {
  id: 'id',
  waveId: 'waveId',
  title: 'title',
  description: 'description',
  createdBy: 'createdBy',
  status: 'status',
  isStarter: 'isStarter',
  audience_noun: 'audience_noun',
  context_label: 'context_label',
  blurb_template: 'blurb_template',
  default_bucket: 'default_bucket'
};

exports.Prisma.MicroActionScalarFieldEnum = {
  id: 'id',
  rippleId: 'rippleId',
  text: 'text',
  bucket: 'bucket',
  status: 'status',
  createdBy: 'createdBy',
  waveId: 'waveId',
  templateId: 'templateId',
  createdAt: 'createdAt'
};

exports.Prisma.ActionLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  microActionId: 'microActionId',
  rippleId: 'rippleId',
  waveId: 'waveId',
  bucket: 'bucket',
  createdAt: 'createdAt',
  city: 'city',
  noteText: 'noteText',
  shareAnon: 'shareAnon'
};

exports.Prisma.PhraseMapScalarFieldEnum = {
  id: 'id',
  waveId: 'waveId',
  bucket: 'bucket',
  phrase: 'phrase',
  isActive: 'isActive',
  priority: 'priority'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.TemplateStatus = exports.$Enums.TemplateStatus = {
  active: 'active',
  inactive: 'inactive',
  archived: 'archived'
};

exports.Prisma.ModelName = {
  WaveBucket: 'WaveBucket',
  Template: 'Template',
  User: 'User',
  Wave: 'Wave',
  UserRipple: 'UserRipple',
  RippleActivity: 'RippleActivity',
  RippleSummary: 'RippleSummary',
  Ripple: 'Ripple',
  MicroAction: 'MicroAction',
  ActionLog: 'ActionLog',
  PhraseMap: 'PhraseMap'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
